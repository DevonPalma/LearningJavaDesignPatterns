These are used in creating objects

the singleton
	there are many methods for creating a singleton type object
	but basically it is a method in which only ONE type of that object
	is ever created. and never any more
	
the factory pattern
	this is a method which basically creates a "factory" for sub type objects
	it allows you to define a type for an object to get
	like say I have a factory for cake, I tell it I would like a chocolate cake
	object please then it returns me a new chocolate cake
	
the abstract factory pattern
	this is a method which is like a factory of factories
	so for example
	I want a chocolate cake, so I would tell my factory of cake factories
	to make me a chocolate cake factory, then i can ask that factory to make
	me a chocolate factory
	
the builder pattern
	so this is basically a method which is a lot like the factory pattern BUT
	sometimes ya know just theres to many variables and you wanna make something in steps
	so like imagine I want a cake factory the first thing I'd do would be
	create a cake for me, Id say something like alright first off create a cake template with one layer
	now i use functions which would be like, set the frosting to chocolate, set the cook time to 1 hour
	alright now I have everything I personally want, now make me the cake and it returns me a cake
	
the Prototype
	so this is a method which uses a pre-exesting object to create itself
	so lets say I have a cake object but I really want another cake just like it
	so I would feed it into a clone type object, and it would read all its info
	and then BAM I get a second cake (making me happy)
	